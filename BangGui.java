/* Brady Lowe
    Object oriented Programing Section 1
    R11527629   
    Project 1
 */
package my.Bang;

import static my.Bang.BANG.availableTargetLeft;
import static my.Bang.BANG.availableTargetRight;
import static my.Bang.BANG.damageTarget;

/**
 *
 * @author brady
 */
public class BangGui extends javax.swing.JFrame {

    private static Boolean StartGame;
    private String Dice;
    private String TestName;
    public static int UserRolls = 1;
    private static int healCount = 0;
    private static int ShootCount1 = 0;
    private static int ShootCount2 = 0;
    public static Character c;
    public static Player p;
    public static BANG Bang;
    public static Die d;
    public static int Player1Distance, Player2Distance,Player3Distance,Player4Distance,Player5distance,Player6Distance;
    private static int PlayerDist[] = {Player1Distance, Player2Distance,Player3Distance,Player4Distance,Player5distance,Player6Distance};
   
    
    public static boolean Loudmouth = false;
    public static boolean Coward = false;
    
    public static boolean Die1Locked;
    public static boolean Die2Locked;
    public static boolean Die3Locked;
    public static boolean Die4Locked;
    public static boolean Die5Locked;
    public static boolean[] DieLocked = {Die1Locked, Die2Locked, Die3Locked, Die4Locked, Die5Locked};
    static Die[] dice = {new Die(), new Die(), new Die(), new Die(), new Die()};
    /**
     * Creates new form BangGui
     * {Player1,Player2, Player3,Player4,Player5,Player6}
     */
    public BangGui() {
        initComponents();
        GameMenu.setVisible(false);
        StartMenu.setVisible(true);
        DynamiteText.setVisible(false); 
        MaxRollsText.setVisible(false);
        Player1Heal.setVisible(false);
        Player2Heal.setVisible(false);
        Player3Heal.setVisible(false);
        Player4Heal.setVisible(false);
        Player5Heal.setVisible(false);
        Player6Heal.setVisible(false);
        
        Player1Hit.setVisible(false);
        Player2Hit.setVisible(false);
        Player3Hit.setVisible(false);
        Player4Hit.setVisible(false);
        Player5Hit.setVisible(false);
        Player6Hit.setVisible(false);
        
        Player1Dist.setVisible(false);
        Player2Dist.setVisible(false);
        Player3Dist.setVisible(false);
        Player4Dist.setVisible(false);
        Player5Dist.setVisible(false);
        Player6Dist.setVisible(false);
        
        Die1Locked = false;
        Die2Locked = false;
        Die3Locked = false;
        Die4Locked = false;
        Die5Locked = false;
        
        
       // BANG Bang = new BANG();
       // Character c = new Character();
       // Player p = new Player();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GameMenu = new javax.swing.JPanel();
        Player4 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        Player4Separator = new javax.swing.JSeparator();
        Player4Name = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        Player4Arrows = new javax.swing.JLabel();
        Player4Bullets = new javax.swing.JLabel();
        Player4Heal = new javax.swing.JButton();
        Player4Hit = new javax.swing.JButton();
        Player4Role = new javax.swing.JLabel();
        Player4Dist = new javax.swing.JLabel();
        Player2 = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JSeparator();
        Player2Separator = new javax.swing.JSeparator();
        Player2Name = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Player2Bullets = new javax.swing.JLabel();
        Player2Arrows = new javax.swing.JLabel();
        Player2Heal = new javax.swing.JButton();
        Player2Hit = new javax.swing.JButton();
        Player2Role = new javax.swing.JLabel();
        Player2Dist = new javax.swing.JLabel();
        Player3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        Player3Separator = new javax.swing.JSeparator();
        Player3Name = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Player3Arrows = new javax.swing.JLabel();
        Player3Bullets = new javax.swing.JLabel();
        Player3Heal = new javax.swing.JButton();
        Player3Hit = new javax.swing.JButton();
        Player3Role = new javax.swing.JLabel();
        Player3Dist = new javax.swing.JLabel();
        ArrowsObj = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        TotalArrow = new javax.swing.JLabel();
        Player5 = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        Player5Separator = new javax.swing.JSeparator();
        Player5Name = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Player5Arrows = new javax.swing.JLabel();
        Player5Bullets = new javax.swing.JLabel();
        Player5Heal = new javax.swing.JButton();
        Player5Hit = new javax.swing.JButton();
        Player5Role = new javax.swing.JLabel();
        Player5Dist = new javax.swing.JLabel();
        Player1 = new javax.swing.JPanel();
        jSeparator7 = new javax.swing.JSeparator();
        Player1Separator = new javax.swing.JSeparator();
        Player1Name = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        Player1Bullets = new javax.swing.JLabel();
        Player1Arrows = new javax.swing.JLabel();
        Player1Heal = new javax.swing.JButton();
        Player1Hit = new javax.swing.JButton();
        Player1Role = new javax.swing.JLabel();
        Player1Dist = new javax.swing.JLabel();
        UserCard = new javax.swing.JPanel();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator17 = new javax.swing.JSeparator();
        UserRole = new javax.swing.JLabel();
        UserCharacter = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        UserArrows = new javax.swing.JLabel();
        UserBullets = new javax.swing.JLabel();
        UserHeal = new javax.swing.JButton();
        Player6 = new javax.swing.JPanel();
        jSeparator9 = new javax.swing.JSeparator();
        Player6Separator = new javax.swing.JSeparator();
        Player6Name = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        Player6Bullets = new javax.swing.JLabel();
        Player6Arrows = new javax.swing.JLabel();
        Player6Heal = new javax.swing.JButton();
        Player6Hit = new javax.swing.JButton();
        Player6Role = new javax.swing.JLabel();
        Player6Dist = new javax.swing.JLabel();
        DicePane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Lock1 = new javax.swing.JCheckBox();
        Lock2 = new javax.swing.JCheckBox();
        Lock3 = new javax.swing.JCheckBox();
        Lock4 = new javax.swing.JCheckBox();
        Lock5 = new javax.swing.JCheckBox();
        Dice1 = new javax.swing.JButton();
        Dice2 = new javax.swing.JButton();
        Dice3 = new javax.swing.JButton();
        Dice4 = new javax.swing.JButton();
        Dice5 = new javax.swing.JButton();
        Roll = new javax.swing.JButton();
        MaxRollsText = new javax.swing.JLabel();
        ExpansionDieOS = new javax.swing.JComboBox<>();
        DynamiteText = new javax.swing.JLabel();
        StartMenu = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        PlayerSelect = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ExpansionPackSelect = new javax.swing.JComboBox<>();
        Start = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(24, 24, 24));
        setResizable(false);
        setSize(new java.awt.Dimension(1050, 1050));

        GameMenu.setBackground(new java.awt.Color(24, 24, 24));
        GameMenu.setPreferredSize(new java.awt.Dimension(1050, 1050));

        Player4.setBackground(new java.awt.Color(24, 24, 24));
        Player4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(250, 250, 250), 4));
        Player4.setMaximumSize(new java.awt.Dimension(150, 169));
        Player4.setMinimumSize(new java.awt.Dimension(150, 169));

        Player4Name.setBackground(new java.awt.Color(24, 24, 24));
        Player4Name.setForeground(new java.awt.Color(250, 250, 250));
        Player4Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(250, 250, 250));
        jLabel18.setText(" Bullets: ");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(250, 250, 250));
        jLabel19.setText(" Arrows: ");

        Player4Arrows.setBackground(new java.awt.Color(24, 24, 24));
        Player4Arrows.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player4Arrows.setForeground(new java.awt.Color(240, 240, 240));
        Player4Arrows.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player4Arrows.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player4Bullets.setBackground(new java.awt.Color(24, 24, 24));
        Player4Bullets.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player4Bullets.setForeground(new java.awt.Color(240, 240, 240));
        Player4Bullets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player4Bullets.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player4Heal.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player4Heal.setText("Heal");
        Player4Heal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player4HealActionPerformed(evt);
            }
        });

        Player4Hit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player4Hit.setText("Hit");
        Player4Hit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player4HitActionPerformed(evt);
            }
        });

        Player4Role.setBackground(new java.awt.Color(24, 24, 24));
        Player4Role.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player4Role.setForeground(new java.awt.Color(250, 250, 250));
        Player4Role.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Player4Dist.setForeground(new java.awt.Color(250, 0, 0));
        Player4Dist.setText("jLabel5");

        javax.swing.GroupLayout Player4Layout = new javax.swing.GroupLayout(Player4);
        Player4.setLayout(Player4Layout);
        Player4Layout.setHorizontalGroup(
            Player4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addComponent(Player4Separator, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(Player4Name, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addGroup(Player4Layout.createSequentialGroup()
                .addGroup(Player4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(10, 10, 10)
                        .addComponent(Player4Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                    .addGroup(Player4Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(7, 7, 7)
                        .addComponent(Player4Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(Player4Layout.createSequentialGroup()
                .addComponent(Player4Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player4Hit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(Player4Layout.createSequentialGroup()
                .addComponent(Player4Role, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player4Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Player4Layout.setVerticalGroup(
            Player4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player4Layout.createSequentialGroup()
                .addComponent(Player4Name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(Player4Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(Player4Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Player4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player4Heal)
                    .addComponent(Player4Hit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Player4Separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player4Layout.createSequentialGroup()
                        .addComponent(Player4Role, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addComponent(Player4Dist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Player2.setBackground(new java.awt.Color(24, 24, 24));
        Player2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(250, 250, 250), 4));
        Player2.setPreferredSize(new java.awt.Dimension(150, 169));
        Player2.setRequestFocusEnabled(false);

        Player2Name.setBackground(new java.awt.Color(24, 24, 24));
        Player2Name.setForeground(new java.awt.Color(250, 250, 250));
        Player2Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(250, 250, 250));
        jLabel14.setText(" Bullets: ");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(250, 250, 250));
        jLabel15.setText(" Arrows: ");

        Player2Bullets.setBackground(new java.awt.Color(24, 24, 24));
        Player2Bullets.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player2Bullets.setForeground(new java.awt.Color(240, 240, 240));
        Player2Bullets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player2Bullets.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player2Arrows.setBackground(new java.awt.Color(24, 24, 24));
        Player2Arrows.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player2Arrows.setForeground(new java.awt.Color(240, 240, 240));
        Player2Arrows.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player2Arrows.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player2Heal.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player2Heal.setText("Heal");
        Player2Heal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player2HealActionPerformed(evt);
            }
        });

        Player2Hit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player2Hit.setText("Hit");
        Player2Hit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player2HitActionPerformed(evt);
            }
        });

        Player2Role.setBackground(new java.awt.Color(24, 24, 24));
        Player2Role.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player2Role.setForeground(new java.awt.Color(250, 250, 250));
        Player2Role.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Player2Dist.setForeground(new java.awt.Color(250, 0, 0));
        Player2Dist.setText("jLabel5");

        javax.swing.GroupLayout Player2Layout = new javax.swing.GroupLayout(Player2);
        Player2.setLayout(Player2Layout);
        Player2Layout.setHorizontalGroup(
            Player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator6, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addComponent(Player2Separator)
            .addComponent(Player2Name, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addGroup(Player2Layout.createSequentialGroup()
                .addGroup(Player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Player2Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Player2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Player2Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(Player2Layout.createSequentialGroup()
                .addComponent(Player2Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player2Hit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(Player2Layout.createSequentialGroup()
                .addComponent(Player2Role, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player2Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Player2Layout.setVerticalGroup(
            Player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player2Layout.createSequentialGroup()
                .addComponent(Player2Name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(Player2Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(Player2Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player2Heal)
                    .addComponent(Player2Hit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Player2Separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Player2Role, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Player2Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Player3.setBackground(new java.awt.Color(24, 24, 24));
        Player3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(250, 250, 250), 4, true));
        Player3.setMaximumSize(new java.awt.Dimension(150, 169));
        Player3.setMinimumSize(new java.awt.Dimension(150, 169));

        Player3Name.setBackground(new java.awt.Color(24, 24, 24));
        Player3Name.setForeground(new java.awt.Color(250, 250, 250));
        Player3Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(250, 250, 250));
        jLabel16.setText(" Bullets: ");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(250, 250, 250));
        jLabel17.setText(" Arrows: ");

        Player3Arrows.setBackground(new java.awt.Color(24, 24, 24));
        Player3Arrows.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player3Arrows.setForeground(new java.awt.Color(240, 240, 240));
        Player3Arrows.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player3Arrows.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player3Bullets.setBackground(new java.awt.Color(24, 24, 24));
        Player3Bullets.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player3Bullets.setForeground(new java.awt.Color(240, 240, 240));
        Player3Bullets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player3Bullets.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player3Heal.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player3Heal.setText("Heal");
        Player3Heal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player3HealActionPerformed(evt);
            }
        });

        Player3Hit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player3Hit.setText("Hit");
        Player3Hit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player3HitActionPerformed(evt);
            }
        });

        Player3Role.setBackground(new java.awt.Color(24, 24, 24));
        Player3Role.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player3Role.setForeground(new java.awt.Color(250, 250, 250));
        Player3Role.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Player3Dist.setForeground(new java.awt.Color(250, 0, 0));
        Player3Dist.setText("jLabel5");

        javax.swing.GroupLayout Player3Layout = new javax.swing.GroupLayout(Player3);
        Player3.setLayout(Player3Layout);
        Player3Layout.setHorizontalGroup(
            Player3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(Player3Separator)
            .addComponent(Player3Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Player3Layout.createSequentialGroup()
                .addGroup(Player3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(10, 10, 10)
                        .addComponent(Player3Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                    .addGroup(Player3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(7, 7, 7)
                        .addComponent(Player3Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Player3Layout.createSequentialGroup()
                .addComponent(Player3Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player3Hit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(Player3Layout.createSequentialGroup()
                .addComponent(Player3Role, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player3Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Player3Layout.setVerticalGroup(
            Player3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player3Layout.createSequentialGroup()
                .addComponent(Player3Name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(Player3Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Player3Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player3Heal)
                    .addComponent(Player3Hit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player3Separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player3Layout.createSequentialGroup()
                        .addComponent(Player3Role, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addComponent(Player3Dist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        ArrowsObj.setBackground(new java.awt.Color(24, 24, 24));
        ArrowsObj.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(250, 250, 250), 4));
        ArrowsObj.setPreferredSize(new java.awt.Dimension(150, 169));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(250, 250, 250));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Arrows");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        TotalArrow.setBackground(new java.awt.Color(24, 24, 24));
        TotalArrow.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        TotalArrow.setForeground(new java.awt.Color(250, 250, 250));
        TotalArrow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout ArrowsObjLayout = new javax.swing.GroupLayout(ArrowsObj);
        ArrowsObj.setLayout(ArrowsObjLayout);
        ArrowsObjLayout.setHorizontalGroup(
            ArrowsObjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ArrowsObjLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(TotalArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        ArrowsObjLayout.setVerticalGroup(
            ArrowsObjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArrowsObjLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TotalArrow, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        Player5.setBackground(new java.awt.Color(24, 24, 24));
        Player5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(250, 250, 250), 4));
        Player5.setMaximumSize(new java.awt.Dimension(150, 169));
        Player5.setMinimumSize(new java.awt.Dimension(150, 169));

        Player5Name.setBackground(new java.awt.Color(24, 24, 24));
        Player5Name.setForeground(new java.awt.Color(250, 250, 250));
        Player5Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(250, 250, 250));
        jLabel20.setText(" Bullets: ");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(250, 250, 250));
        jLabel21.setText(" Arrows: ");

        Player5Arrows.setBackground(new java.awt.Color(24, 24, 24));
        Player5Arrows.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player5Arrows.setForeground(new java.awt.Color(240, 240, 240));
        Player5Arrows.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player5Arrows.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player5Bullets.setBackground(new java.awt.Color(24, 24, 24));
        Player5Bullets.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player5Bullets.setForeground(new java.awt.Color(240, 240, 240));
        Player5Bullets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player5Bullets.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player5Heal.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player5Heal.setText("Heal");
        Player5Heal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player5HealActionPerformed(evt);
            }
        });

        Player5Hit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player5Hit.setText("Hit");
        Player5Hit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player5HitActionPerformed(evt);
            }
        });

        Player5Role.setBackground(new java.awt.Color(24, 24, 24));
        Player5Role.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player5Role.setForeground(new java.awt.Color(250, 250, 250));
        Player5Role.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Player5Dist.setForeground(new java.awt.Color(250, 0, 0));
        Player5Dist.setText("jLabel5");

        javax.swing.GroupLayout Player5Layout = new javax.swing.GroupLayout(Player5);
        Player5.setLayout(Player5Layout);
        Player5Layout.setHorizontalGroup(
            Player5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addComponent(Player5Separator)
            .addComponent(Player5Name, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addGroup(Player5Layout.createSequentialGroup()
                .addGroup(Player5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player5Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(10, 10, 10)
                        .addComponent(Player5Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                    .addGroup(Player5Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Player5Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(Player5Layout.createSequentialGroup()
                .addComponent(Player5Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player5Hit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(Player5Layout.createSequentialGroup()
                .addComponent(Player5Role, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player5Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Player5Layout.setVerticalGroup(
            Player5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player5Layout.createSequentialGroup()
                .addComponent(Player5Name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(Player5Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(Player5Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Player5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player5Heal)
                    .addComponent(Player5Hit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Player5Separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player5Layout.createSequentialGroup()
                        .addComponent(Player5Role, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addComponent(Player5Dist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Player1.setBackground(new java.awt.Color(24, 24, 24));
        Player1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(250, 250, 250), 4));
        Player1.setMaximumSize(new java.awt.Dimension(150, 169));
        Player1.setMinimumSize(new java.awt.Dimension(150, 169));
        Player1.setPreferredSize(new java.awt.Dimension(150, 169));

        Player1Name.setBackground(new java.awt.Color(24, 24, 24));
        Player1Name.setForeground(new java.awt.Color(250, 250, 250));
        Player1Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(250, 250, 250));
        jLabel26.setText(" Arrows: ");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(250, 250, 250));
        jLabel27.setText(" Bullets: ");

        Player1Bullets.setBackground(new java.awt.Color(24, 24, 24));
        Player1Bullets.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player1Bullets.setForeground(new java.awt.Color(240, 240, 240));
        Player1Bullets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player1Bullets.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player1Arrows.setBackground(new java.awt.Color(24, 24, 24));
        Player1Arrows.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player1Arrows.setForeground(new java.awt.Color(240, 240, 240));
        Player1Arrows.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player1Arrows.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Player1Arrows.setPreferredSize(new java.awt.Dimension(19, 22));

        Player1Heal.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player1Heal.setText("Heal");
        Player1Heal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player1HealActionPerformed(evt);
            }
        });

        Player1Hit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player1Hit.setText("Hit");
        Player1Hit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player1HitActionPerformed(evt);
            }
        });

        Player1Role.setBackground(new java.awt.Color(24, 24, 24));
        Player1Role.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player1Role.setForeground(new java.awt.Color(250, 250, 250));
        Player1Role.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Player1Dist.setForeground(new java.awt.Color(250, 0, 0));
        Player1Dist.setText("jLabel5");

        javax.swing.GroupLayout Player1Layout = new javax.swing.GroupLayout(Player1);
        Player1.setLayout(Player1Layout);
        Player1Layout.setHorizontalGroup(
            Player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator7)
            .addComponent(Player1Separator)
            .addComponent(Player1Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Player1Layout.createSequentialGroup()
                .addGroup(Player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Player1Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Player1Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(Player1Layout.createSequentialGroup()
                .addComponent(Player1Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(Player1Hit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(Player1Layout.createSequentialGroup()
                .addComponent(Player1Role, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player1Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Player1Layout.setVerticalGroup(
            Player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player1Layout.createSequentialGroup()
                .addComponent(Player1Name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Player1Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(Player1Arrows, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player1Heal)
                    .addComponent(Player1Hit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Player1Separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Player1Role, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Player1Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        UserCard.setBackground(new java.awt.Color(24, 24, 24));
        UserCard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(250, 250, 250), 4));
        UserCard.setMaximumSize(new java.awt.Dimension(150, 169));
        UserCard.setMinimumSize(new java.awt.Dimension(150, 169));
        UserCard.setPreferredSize(new java.awt.Dimension(150, 169));

        UserRole.setBackground(new java.awt.Color(24, 24, 24));
        UserRole.setForeground(new java.awt.Color(250, 250, 250));
        UserRole.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        UserCharacter.setBackground(new java.awt.Color(24, 24, 24));
        UserCharacter.setForeground(new java.awt.Color(250, 250, 250));
        UserCharacter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(250, 250, 250));
        jLabel24.setText(" Bullets: ");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(250, 250, 250));
        jLabel25.setText(" Arrows: ");

        UserArrows.setBackground(new java.awt.Color(24, 24, 24));
        UserArrows.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        UserArrows.setForeground(new java.awt.Color(240, 240, 240));
        UserArrows.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UserArrows.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        UserBullets.setBackground(new java.awt.Color(24, 24, 24));
        UserBullets.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        UserBullets.setForeground(new java.awt.Color(240, 240, 240));
        UserBullets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UserBullets.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        UserHeal.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        UserHeal.setText("Heal");
        UserHeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserHealActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserCardLayout = new javax.swing.GroupLayout(UserCard);
        UserCard.setLayout(UserCardLayout);
        UserCardLayout.setHorizontalGroup(
            UserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator8, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addComponent(jSeparator17)
            .addComponent(UserRole, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addComponent(UserCharacter, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addGroup(UserCardLayout.createSequentialGroup()
                .addGroup(UserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserCardLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(10, 10, 10)
                        .addComponent(UserBullets, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                    .addGroup(UserCardLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(7, 7, 7)
                        .addComponent(UserArrows, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                    .addGroup(UserCardLayout.createSequentialGroup()
                        .addComponent(UserHeal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        UserCardLayout.setVerticalGroup(
            UserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserCardLayout.createSequentialGroup()
                .addComponent(UserCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(UserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(UserBullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(UserCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(UserArrows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UserHeal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserRole, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Player6.setBackground(new java.awt.Color(24, 24, 24));
        Player6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(250, 250, 250), 4));
        Player6.setMaximumSize(new java.awt.Dimension(150, 169));
        Player6.setMinimumSize(new java.awt.Dimension(150, 169));
        Player6.setPreferredSize(new java.awt.Dimension(150, 169));

        Player6Name.setBackground(new java.awt.Color(24, 24, 24));
        Player6Name.setForeground(new java.awt.Color(250, 250, 250));
        Player6Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(250, 250, 250));
        jLabel22.setText(" Bullets: ");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(250, 250, 250));
        jLabel23.setText(" Arrows: ");

        Player6Bullets.setBackground(new java.awt.Color(24, 24, 24));
        Player6Bullets.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player6Bullets.setForeground(new java.awt.Color(240, 240, 240));
        Player6Bullets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player6Bullets.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player6Arrows.setBackground(new java.awt.Color(24, 24, 24));
        Player6Arrows.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Player6Arrows.setForeground(new java.awt.Color(240, 240, 240));
        Player6Arrows.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player6Arrows.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Player6Heal.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player6Heal.setText("Heal");
        Player6Heal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player6HealActionPerformed(evt);
            }
        });

        Player6Hit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player6Hit.setText("Hit");
        Player6Hit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player6HitActionPerformed(evt);
            }
        });

        Player6Role.setBackground(new java.awt.Color(24, 24, 24));
        Player6Role.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Player6Role.setForeground(new java.awt.Color(250, 250, 250));
        Player6Role.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Player6Dist.setForeground(new java.awt.Color(250, 0, 0));
        Player6Dist.setText("jLabel5");

        javax.swing.GroupLayout Player6Layout = new javax.swing.GroupLayout(Player6);
        Player6.setLayout(Player6Layout);
        Player6Layout.setHorizontalGroup(
            Player6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator9, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addComponent(Player6Separator)
            .addComponent(Player6Name, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addGroup(Player6Layout.createSequentialGroup()
                .addGroup(Player6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player6Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(10, 10, 10)
                        .addComponent(Player6Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                    .addGroup(Player6Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(7, 7, 7)
                        .addComponent(Player6Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(Player6Layout.createSequentialGroup()
                .addComponent(Player6Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player6Hit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(Player6Layout.createSequentialGroup()
                .addComponent(Player6Role, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Player6Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Player6Layout.setVerticalGroup(
            Player6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player6Layout.createSequentialGroup()
                .addComponent(Player6Name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(Player6Bullets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Player6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(Player6Arrows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Player6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player6Heal)
                    .addComponent(Player6Hit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Player6Separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Player6Role, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Player6Dist, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        DicePane.setBackground(new java.awt.Color(24, 24, 24));
        DicePane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240), 4));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(250, 250, 250));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dice");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        Lock1.setBackground(new java.awt.Color(24, 24, 24));
        Lock1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Lock1.setForeground(new java.awt.Color(250, 250, 250));
        Lock1.setText("Lock");

        Lock2.setBackground(new java.awt.Color(24, 24, 24));
        Lock2.setForeground(new java.awt.Color(250, 250, 250));
        Lock2.setText("Lock");

        Lock3.setBackground(new java.awt.Color(24, 24, 24));
        Lock3.setForeground(new java.awt.Color(250, 250, 250));
        Lock3.setText("Lock");

        Lock4.setBackground(new java.awt.Color(24, 24, 24));
        Lock4.setForeground(new java.awt.Color(250, 250, 250));
        Lock4.setText("Lock");

        Lock5.setBackground(new java.awt.Color(24, 24, 24));
        Lock5.setForeground(new java.awt.Color(250, 250, 250));
        Lock5.setText("Lock");

        Dice1.setBackground(new java.awt.Color(50, 50, 50));
        Dice1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Dice1.setForeground(new java.awt.Color(250, 250, 250));
        Dice1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102)));

        Dice2.setBackground(new java.awt.Color(50, 50, 50));
        Dice2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Dice2.setForeground(new java.awt.Color(250, 250, 250));
        Dice2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102)));

        Dice3.setBackground(new java.awt.Color(50, 50, 50));
        Dice3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Dice3.setForeground(new java.awt.Color(250, 250, 250));
        Dice3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102)));

        Dice4.setBackground(new java.awt.Color(50, 50, 50));
        Dice4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Dice4.setForeground(new java.awt.Color(250, 250, 250));
        Dice4.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102)));

        Dice5.setBackground(new java.awt.Color(50, 50, 50));
        Dice5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Dice5.setForeground(new java.awt.Color(250, 250, 250));
        Dice5.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102)));

        javax.swing.GroupLayout DicePaneLayout = new javax.swing.GroupLayout(DicePane);
        DicePane.setLayout(DicePaneLayout);
        DicePaneLayout.setHorizontalGroup(
            DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DicePaneLayout.createSequentialGroup()
                .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DicePaneLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Dice1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(DicePaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(Lock1))))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Dice2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DicePaneLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Lock2)))
                .addGap(50, 50, 50)
                .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Dice3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DicePaneLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Lock3)))
                .addGap(50, 50, 50)
                .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Dice4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DicePaneLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Lock4)))
                .addGap(50, 50, 50)
                .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DicePaneLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Lock5))
                    .addComponent(Dice5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        DicePaneLayout.setVerticalGroup(
            DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DicePaneLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Dice1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dice2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dice3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dice4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dice5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Lock2)
                        .addComponent(Lock1))
                    .addGroup(DicePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Lock5)
                        .addComponent(Lock4)
                        .addComponent(Lock3)))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        Roll.setBackground(new java.awt.Color(24, 24, 24));
        Roll.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Roll.setForeground(new java.awt.Color(250, 250, 250));
        Roll.setText("Roll");
        Roll.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Roll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RollMouseClicked(evt);
            }
        });

        MaxRollsText.setBackground(new java.awt.Color(24, 24, 24));
        MaxRollsText.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        MaxRollsText.setForeground(new java.awt.Color(250, 0, 0));
        MaxRollsText.setText("Maximum amount of rolls! Perform actions!");

        ExpansionDieOS.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        ExpansionDieOS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Loudmouth", "Coward" }));

        DynamiteText.setBackground(new java.awt.Color(24, 24, 24));
        DynamiteText.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DynamiteText.setForeground(new java.awt.Color(250, 0, 0));
        DynamiteText.setText("Dynamite ends your turn and you take 1 damage");

        javax.swing.GroupLayout GameMenuLayout = new javax.swing.GroupLayout(GameMenu);
        GameMenu.setLayout(GameMenuLayout);
        GameMenuLayout.setHorizontalGroup(
            GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameMenuLayout.createSequentialGroup()
                .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(GameMenuLayout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(Player3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GameMenuLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Player1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Player2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GameMenuLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(Player4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(GameMenuLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ArrowsObj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                        .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Player6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Player5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GameMenuLayout.createSequentialGroup()
                .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(GameMenuLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GameMenuLayout.createSequentialGroup()
                                .addComponent(DynamiteText, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(MaxRollsText, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DicePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(GameMenuLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(ExpansionDieOS, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Roll, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(129, 129, 129))
        );
        GameMenuLayout.setVerticalGroup(
            GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GameMenuLayout.createSequentialGroup()
                        .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Player3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Player4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Player5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(GameMenuLayout.createSequentialGroup()
                                .addComponent(Player2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Player1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Player6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(93, 93, 93))
                    .addGroup(GameMenuLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(ArrowsObj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UserCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MaxRollsText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DynamiteText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DicePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(GameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Roll, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExpansionDieOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(118, 118, 118))
        );

        StartMenu.setBackground(new java.awt.Color(24, 24, 24));
        StartMenu.setForeground(new java.awt.Color(250, 250, 250));
        StartMenu.setPreferredSize(new java.awt.Dimension(1050, 1050));

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        label1.setForeground(new java.awt.Color(250, 250, 250));
        label1.setText("BANG!");

        PlayerSelect.setBackground(new java.awt.Color(24, 24, 24));
        PlayerSelect.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PlayerSelect.setForeground(new java.awt.Color(25, 25, 25));
        PlayerSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "4", "5", "6", "7" }));
        PlayerSelect.setToolTipText("");
        PlayerSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayerSelectActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(24, 24, 24));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(250, 250, 250));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setLabelFor(PlayerSelect);
        jLabel2.setText("Expansion Packs: ");

        jLabel3.setBackground(new java.awt.Color(24, 24, 24));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(250, 250, 250));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setLabelFor(PlayerSelect);
        jLabel3.setText("Number of Players: ");

        ExpansionPackSelect.setBackground(new java.awt.Color(24, 24, 24));
        ExpansionPackSelect.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ExpansionPackSelect.setForeground(new java.awt.Color(25, 25, 25));
        ExpansionPackSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Old Saloon", "Undead or Alive" }));

        Start.setBackground(new java.awt.Color(0, 240, 0));
        Start.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Start.setForeground(new java.awt.Color(25, 25, 25));
        Start.setText("Start");
        Start.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        Start.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                StartMousePressed(evt);
            }
        });

        javax.swing.GroupLayout StartMenuLayout = new javax.swing.GroupLayout(StartMenu);
        StartMenu.setLayout(StartMenuLayout);
        StartMenuLayout.setHorizontalGroup(
            StartMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(StartMenuLayout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addGroup(StartMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StartMenuLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PlayerSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(StartMenuLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ExpansionPackSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StartMenuLayout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(370, 370, 370))
        );
        StartMenuLayout.setVerticalGroup(
            StartMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StartMenuLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StartMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlayerSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(StartMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExpansionPackSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GameMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StartMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GameMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StartMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void PlayerSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayerSelectActionPerformed

       if((PlayerSelect.getSelectedItem().equals("5")))
                {
                    Player1.setVisible(true);
                    Player2.setVisible(true);
                    Player3.setVisible(true);
                    Player4.setVisible(true);
                    Player5.setVisible(false);
                    Player6.setVisible(false);
                }
       else if((PlayerSelect.getSelectedItem().equals("6")))
                {
                    Player1.setVisible(true);
                    Player2.setVisible(true);
                    Player3.setVisible(true);
                    Player4.setVisible(true);
                    Player5.setVisible(true);
                    Player6.setVisible(false);    
                }
       else if((PlayerSelect.getSelectedItem().equals("7")))
                {
                    Player1.setVisible(true);
                    Player2.setVisible(true);
                    Player3.setVisible(true);
                    Player4.setVisible(true);
                    Player5.setVisible(true);
                    Player6.setVisible(true);  
                }
       else if((PlayerSelect.getSelectedItem().equals("4")))
                {
                    Player1.setVisible(true);
                    Player2.setVisible(true);
                    Player3.setVisible(true);
                    Player4.setVisible(false);
                    Player5.setVisible(false);
                    Player6.setVisible(false);           
                }

    }//GEN-LAST:event_PlayerSelectActionPerformed

    private void StartMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartMousePressed

        StartGame = true;
        StartMenu.setVisible(false);
        GameMenu.setVisible(true);
        
        UserCharacter.setText(Bang.pc.character().name());
        UserRole.setText(BANG.pc.role());
        Player1Name.setText(BANG.players.get(1).character().name());
        Player2Name.setText(BANG.players.get(2).character().name());
        Player3Name.setText(BANG.players.get(3).character().name());
        Player4Name.setText(BANG.players.get(4).character().name());
        Player5Name.setText(BANG.players.get(5).character().name());
        Player6Name.setText(BANG.players.get(6).character().name());
        ExpansionDieOS.setVisible(false);
        
        if((BANG.players.get(1).role()).equals("sheriff"))
            Player1Role.setText(BANG.players.get(1).role());
        if((BANG.players.get(2).role()).equals("sheriff"))
            Player2Role.setText(BANG.players.get(2).role());
        if((BANG.players.get(3).role().equals("sheriff")))
           Player3Role.setText(BANG.players.get(3).role()); 
        if(BANG.players.get(4).role().equals("sheriff"))
            Player4Role.setText(BANG.players.get(4).role());
        if((BANG.players.get(4).role()).equals("sheriff"))
            Player5Role.setText(BANG.players.get(5).role());
        if(BANG.players.get(6).role().equals("sheriff"))
            Player6Role.setText(BANG.players.get(6).role());
      
        UserBullets.setText(Integer.toString(BANG.pc.character().getHP()));
        Player1Bullets.setText(Integer.toString(BANG.players.get(1).character().getHP()));
        Player2Bullets.setText(Integer.toString(BANG.players.get(2).character().getHP()));
        Player3Bullets.setText(Integer.toString(BANG.players.get(3).character().getHP()));
        Player4Bullets.setText(Integer.toString(BANG.players.get(4).character().getHP()));
        Player5Bullets.setText(Integer.toString(BANG.players.get(5).character().getHP()));
        Player6Bullets.setText(Integer.toString(BANG.players.get(6).character().getHP()));
        
        UserArrows.setText(Integer.toString(BANG.pc.arrows()));
        Player1Arrows.setText(Integer.toString(BANG.players.get(1).arrows()));
        Player2Arrows.setText(Integer.toString(BANG.players.get(2).arrows()));
        Player3Arrows.setText(Integer.toString(BANG.players.get(3).arrows()));
        Player4Arrows.setText(Integer.toString(BANG.players.get(4).arrows()));
        Player5Arrows.setText(Integer.toString(BANG.players.get(5).arrows()));
        Player6Arrows.setText(Integer.toString(BANG.players.get(6).arrows()));
        
        if(BANG.pc.character().name().equals("Apache Kid") || BANG.pc.character().name().equals("Bill Noface"))
            ExpansionDieOS.setVisible(true);
            
        BANG.beginTurn(BANG.pc);
        
        
    }//GEN-LAST:event_StartMousePressed

    private void RollMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RollMouseClicked
                
        DynamiteText.setVisible(false);

        if(DieLocked[0])
            Lock1.setSelected(true);
        if(DieLocked[1])
            Lock2.setSelected(true);
        if(DieLocked[2])
            Lock3.setSelected(true);
        if(DieLocked[3])
            Lock4.setSelected(true);
        if(DieLocked[4])
            Lock5.setSelected(true);
        if(!DieLocked[0])
            Lock1.setSelected(false);
        if(!DieLocked[1])
            Lock2.setSelected(false);
        if(!DieLocked[2])
            Lock3.setSelected(false);
        if(!DieLocked[3])
            Lock4.setSelected(false);
        if(!DieLocked[4])
            Lock5.setSelected(false);
        
      if(UserRolls < 3)
        {
                        
            if(Lock1.isSelected())
              DieLocked[0] = true;
            if(Lock2.isSelected())
              DieLocked[1] = true;
            if(Lock3.isSelected())
              DieLocked[2] = true;
            if(Lock4.isSelected())
              DieLocked[3] = true;
            if(Lock5.isSelected())
              DieLocked[4] = true;

            if(ExpansionDieOS.getSelectedItem().equals("Loudmouth"));
                Loudmouth = true;
            if(ExpansionDieOS.getSelectedItem().equals("Coward"));
                Coward = true;
            UserRolls++;
            if(!BANG.dynamiteCheck(BANG.pc))
            BANG.rollAll(BANG.pc);
            else
            {
                DynamiteText.setVisible(true);
                BANG.advanceTurn();
            }
               
        }
        else
        { 
          //System.out.println("ieatass");
          MaxRollsText.setVisible(true);
          BANG.dynamiteCheck(BANG.pc);
          BANG.interpretFinalRoll(BANG.pc);
          UpdateGUI();
          if(Dice1.getText().equals("Beer") || Dice1.getText().equals("Double Beer") || Dice1.getText().equals("Whiskey Bottle") )
              drinkMenu();
          if(Dice2.getText().equals("Beer")|| Dice2.getText().equals("Double Beer")|| Dice2.getText().equals("Whiskey Bottle"))
              drinkMenu();
          if(Dice3.getText().equals("Beer")|| Dice3.getText().equals("Double Beer")|| Dice3.getText().equals("Whiskey Bottle"))
              drinkMenu();
          if(Dice4.getText().equals("Beer") || Dice4.getText().equals("Double Beer")|| Dice4.getText().equals("Whiskey Bottle"))
              drinkMenu();
          if(Dice5.getText().equals("Beer")|| Dice5.getText().equals("Double Beer")|| Dice5.getText().equals("Whiskey Bottle"))
              drinkMenu(); 
          
          if(Dice1.getText().equals("Bull's Eye 1"))
              shootMenu1();
          else if(Dice1.getText().equals("Bull's Eye 2"))
              shootMenu2();
          if(Dice2.getText().equals("Bull's Eye 1"))
              shootMenu1();
          else if(Dice2.getText().equals("Bull's Eye 2"))
              shootMenu2();
          if(Dice3.getText().equals("Bull's Eye 1"))
              shootMenu1();
          else if(Dice3.getText().equals("Bull's Eye 2"))
              shootMenu2();
          if(Dice4.getText().equals("Bull's Eye 1"))
              shootMenu1();
          else if(Dice4.getText().equals("Bull's Eye 2"))
              shootMenu2();
          if(Dice5.getText().equals("Bull's Eye 1"))
              shootMenu1();
          else if(Dice5.getText().equals("Bull's Eye 2"))
              shootMenu2();
          
          
        }
        
    }//GEN-LAST:event_RollMouseClicked

    private void Player1HealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player1HealActionPerformed
        BANG.healTarget(BANG.players.get(1), 1);
        UpdateGUI();
        healCount--;
        if(healCount==0)
        {
        Player1Heal.setVisible(false);
        Player2Heal.setVisible(false);
        Player3Heal.setVisible(false);
        Player4Heal.setVisible(false);
        Player5Heal.setVisible(false);
        Player6Heal.setVisible(false);
        }
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();  
          }
        
    }//GEN-LAST:event_Player1HealActionPerformed

    private void Player2HealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player2HealActionPerformed
        BANG.healTarget(BANG.players.get(2), 1);
        UpdateGUI();
        healCount--;
        if(healCount==0)
        {
        Player1Heal.setVisible(false);
        Player2Heal.setVisible(false);
        Player3Heal.setVisible(false);
        Player4Heal.setVisible(false);
        Player5Heal.setVisible(false);
        Player6Heal.setVisible(false);
        }
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player2HealActionPerformed

    private void Player4HealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player4HealActionPerformed
        BANG.healTarget(BANG.players.get(4), 1);
        UpdateGUI();
        healCount--;
        if(healCount==0)
        {
        Player1Heal.setVisible(false);
        Player2Heal.setVisible(false);
        Player3Heal.setVisible(false);
        Player4Heal.setVisible(false);
        Player5Heal.setVisible(false);
        Player6Heal.setVisible(false);
        }
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
        
    }//GEN-LAST:event_Player4HealActionPerformed

    private void Player5HealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player5HealActionPerformed
        BANG.healTarget(BANG.players.get(5), 1);
        UpdateGUI();
        healCount--;
        if(healCount==0)
        {
        Player1Heal.setVisible(false);
        Player2Heal.setVisible(false);
        Player3Heal.setVisible(false);
        Player4Heal.setVisible(false);
        Player5Heal.setVisible(false);
        Player6Heal.setVisible(false);
        }
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player5HealActionPerformed

    private void Player6HealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player6HealActionPerformed
        BANG.healTarget(BANG.players.get(6), 1);
        UpdateGUI();
        healCount--;
        if(healCount==0)
        {
        Player1Heal.setVisible(false);
        Player2Heal.setVisible(false);
        Player3Heal.setVisible(false);
        Player4Heal.setVisible(false);
        Player5Heal.setVisible(false);
        Player6Heal.setVisible(false);
        }
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player6HealActionPerformed

    private void UserHealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserHealActionPerformed
        BANG.healTarget(BANG.pc, 1);
        UpdateGUI();
        healCount--;
        if(healCount==0)
        {
        Player1Heal.setVisible(false);
        Player2Heal.setVisible(false);
        Player3Heal.setVisible(false);
        Player4Heal.setVisible(false);
        Player5Heal.setVisible(false);
        Player6Heal.setVisible(false);
        }
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_UserHealActionPerformed

    private void Player3HealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player3HealActionPerformed
        BANG.healTarget(BANG.players.get(3), 1);
        UpdateGUI();
        healCount--;
        if(healCount==0)
        {
        Player1Heal.setVisible(false);
        Player2Heal.setVisible(false);
        Player3Heal.setVisible(false);
        Player4Heal.setVisible(false);
        Player5Heal.setVisible(false);
        Player6Heal.setVisible(false);
        }
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player3HealActionPerformed

    private void Player1HitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player1HitActionPerformed
        damageTarget(BANG.players.get(1),1);
        UpdateGUI();
        if(PlayerDist[0]== 1)
            ShootCount1--;
        else if(PlayerDist[0]==2)
            ShootCount2--;
        PlayerHitVis();
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player1HitActionPerformed

    private void Player2HitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player2HitActionPerformed
        damageTarget(BANG.players.get(2),1);
        UpdateGUI();
        if(PlayerDist[1]== 1)
            ShootCount1--;
        else if(PlayerDist[1]==2)
            ShootCount2--;
        PlayerHitVis();
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player2HitActionPerformed

    private void Player3HitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player3HitActionPerformed
        damageTarget(BANG.players.get(3),1);
        UpdateGUI();
        if(PlayerDist[2]== 1)
            ShootCount1--;
        else if(PlayerDist[2]==2)
            ShootCount2--;
        PlayerHitVis();
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
        
    }//GEN-LAST:event_Player3HitActionPerformed

    private void Player4HitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player4HitActionPerformed
        damageTarget(BANG.players.get(4),1);
        UpdateGUI();
        if(PlayerDist[3]== 1)
            ShootCount1--;
        else if(PlayerDist[3]==2)
            ShootCount2--;
        PlayerHitVis();
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player4HitActionPerformed

    private void Player5HitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player5HitActionPerformed
        damageTarget(BANG.players.get(5),1);
        UpdateGUI();
        if(PlayerDist[4]== 1)
            ShootCount1--;
        else if(PlayerDist[4]==2)
            ShootCount2--;
        PlayerHitVis();
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player5HitActionPerformed

    private void Player6HitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player6HitActionPerformed
       damageTarget(BANG.players.get(6),1);
        UpdateGUI();
        if(PlayerDist[5]== 1)
            ShootCount1--;
        else if(PlayerDist[5]==2)
            ShootCount2--;
        PlayerHitVis();
        if(ShootCount1+ShootCount2+healCount == 0)
          {
              for(int i = 0; i<5;i++)
                  DieLocked[i] = false;
              Dice1.setText("");
              Dice2.setText("");
              Dice3.setText("");
              Dice4.setText("");
              Dice5.setText("");
              MaxRollsText.setVisible(false);
              DynamiteText.setVisible(false);
              System.out.println("advance turn");
              BANG.advanceTurn();
          }
    }//GEN-LAST:event_Player6HitActionPerformed

    /**
     * @param args the command line arguments
     * 
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       String[] arguments = new String[] {"123"};
       Bang.main(arguments);
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BangGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BangGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BangGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BangGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BangGui().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ArrowsObj;
    private static javax.swing.JButton Dice1;
    private static javax.swing.JButton Dice2;
    private static javax.swing.JButton Dice3;
    private static javax.swing.JButton Dice4;
    private static javax.swing.JButton Dice5;
    private javax.swing.JPanel DicePane;
    private javax.swing.JLabel DynamiteText;
    private static javax.swing.JComboBox<String> ExpansionDieOS;
    public static javax.swing.JComboBox<String> ExpansionPackSelect;
    private static javax.swing.JPanel GameMenu;
    private javax.swing.JCheckBox Lock1;
    private javax.swing.JCheckBox Lock2;
    private javax.swing.JCheckBox Lock3;
    private javax.swing.JCheckBox Lock4;
    private javax.swing.JCheckBox Lock5;
    private javax.swing.JLabel MaxRollsText;
    private static javax.swing.JPanel Player1;
    private static javax.swing.JLabel Player1Arrows;
    private static javax.swing.JLabel Player1Bullets;
    private static javax.swing.JLabel Player1Dist;
    private static javax.swing.JButton Player1Heal;
    private static javax.swing.JButton Player1Hit;
    private javax.swing.JLabel Player1Name;
    private javax.swing.JLabel Player1Role;
    private javax.swing.JSeparator Player1Separator;
    private static javax.swing.JPanel Player2;
    private static javax.swing.JLabel Player2Arrows;
    private static javax.swing.JLabel Player2Bullets;
    private static javax.swing.JLabel Player2Dist;
    private static javax.swing.JButton Player2Heal;
    private static javax.swing.JButton Player2Hit;
    private javax.swing.JLabel Player2Name;
    private javax.swing.JLabel Player2Role;
    private javax.swing.JSeparator Player2Separator;
    private static javax.swing.JPanel Player3;
    private static javax.swing.JLabel Player3Arrows;
    private static javax.swing.JLabel Player3Bullets;
    private static javax.swing.JLabel Player3Dist;
    private static javax.swing.JButton Player3Heal;
    private static javax.swing.JButton Player3Hit;
    private javax.swing.JLabel Player3Name;
    private javax.swing.JLabel Player3Role;
    private javax.swing.JSeparator Player3Separator;
    private static javax.swing.JPanel Player4;
    private static javax.swing.JLabel Player4Arrows;
    private static javax.swing.JLabel Player4Bullets;
    private static javax.swing.JLabel Player4Dist;
    private static javax.swing.JButton Player4Heal;
    private static javax.swing.JButton Player4Hit;
    private javax.swing.JLabel Player4Name;
    private javax.swing.JLabel Player4Role;
    private javax.swing.JSeparator Player4Separator;
    private static javax.swing.JPanel Player5;
    private static javax.swing.JLabel Player5Arrows;
    private static javax.swing.JLabel Player5Bullets;
    private static javax.swing.JLabel Player5Dist;
    private static javax.swing.JButton Player5Heal;
    private static javax.swing.JButton Player5Hit;
    private javax.swing.JLabel Player5Name;
    private javax.swing.JLabel Player5Role;
    private javax.swing.JSeparator Player5Separator;
    private static javax.swing.JPanel Player6;
    private static javax.swing.JLabel Player6Arrows;
    private static javax.swing.JLabel Player6Bullets;
    private static javax.swing.JLabel Player6Dist;
    private static javax.swing.JButton Player6Heal;
    private static javax.swing.JButton Player6Hit;
    private javax.swing.JLabel Player6Name;
    private javax.swing.JLabel Player6Role;
    private javax.swing.JSeparator Player6Separator;
    private static javax.swing.JComboBox<String> PlayerSelect;
    private static javax.swing.JButton Roll;
    private static javax.swing.JButton Start;
    private static javax.swing.JPanel StartMenu;
    private static javax.swing.JLabel TotalArrow;
    private static javax.swing.JLabel UserArrows;
    private static javax.swing.JLabel UserBullets;
    private javax.swing.JPanel UserCard;
    private javax.swing.JLabel UserCharacter;
    private static javax.swing.JButton UserHeal;
    private javax.swing.JLabel UserRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables

   /* 
    private String DiceValue() {
        this.Die = new Die();
        Die.setFaceValue(Die.basicRoll());
        
        return Die.getFaceValue();
          
    }
*/
    
    public static void UpdateGUIDie(Die[] dice){
        
         Dice1.setText(BANG.dice[0].FaceValue());
         Dice2.setText(BANG.dice[1].FaceValue());
         Dice3.setText(BANG.dice[2].FaceValue());
         Dice4.setText(BANG.dice[3].FaceValue());
         Dice5.setText(BANG.dice[4].FaceValue());
         
         UserArrows.setText(Integer.toString(BANG.pc.arrows()));
         Player1Arrows.setText(Integer.toString(BANG.players.get(1).arrows()));
         Player2Arrows.setText(Integer.toString(BANG.players.get(2).arrows()));
         Player3Arrows.setText(Integer.toString(BANG.players.get(3).arrows()));
         Player4Arrows.setText(Integer.toString(BANG.players.get(4).arrows()));
         Player5Arrows.setText(Integer.toString(BANG.players.get(5).arrows()));
         Player6Arrows.setText(Integer.toString(BANG.players.get(6).arrows()));
         
        UserBullets.setText(Integer.toString(BANG.pc.currentHP())); 
        Player1Bullets.setText(Integer.toString(BANG.players.get(1).currentHP()));
        Player2Bullets.setText(Integer.toString(BANG.players.get(2).currentHP()));
        Player3Bullets.setText(Integer.toString(BANG.players.get(3).currentHP()));
        Player4Bullets.setText(Integer.toString(BANG.players.get(4).currentHP()));
        Player5Bullets.setText(Integer.toString(BANG.players.get(5).currentHP()));
        Player6Bullets.setText(Integer.toString(BANG.players.get(6).currentHP()));
        
        TotalArrow.setText(Integer.toString(BANG.pile.arrows()));
    }
    public static void UpdateGUI(){
        
         UserArrows.setText(Integer.toString(BANG.pc.arrows()));
         Player1Arrows.setText(Integer.toString(BANG.players.get(1).arrows()));
         Player2Arrows.setText(Integer.toString(BANG.players.get(2).arrows()));
         Player3Arrows.setText(Integer.toString(BANG.players.get(3).arrows()));
         Player4Arrows.setText(Integer.toString(BANG.players.get(4).arrows()));
         Player5Arrows.setText(Integer.toString(BANG.players.get(5).arrows()));
         Player6Arrows.setText(Integer.toString(BANG.players.get(6).arrows()));
        
        UserBullets.setText(Integer.toString(BANG.pc.currentHP()));
        Player1Bullets.setText(Integer.toString(BANG.players.get(1).currentHP()));
        Player2Bullets.setText(Integer.toString(BANG.players.get(2).currentHP()));
        Player3Bullets.setText(Integer.toString(BANG.players.get(3).currentHP()));
        Player4Bullets.setText(Integer.toString(BANG.players.get(4).currentHP()));
        Player5Bullets.setText(Integer.toString(BANG.players.get(5).currentHP()));
        Player6Bullets.setText(Integer.toString(BANG.players.get(6).currentHP()));
        
        TotalArrow.setText(Integer.toString(BANG.pile.arrows()));
        
        Player1.setVisible(!BANG.players.get(1).isDead());
        Player2.setVisible(!BANG.players.get(2).isDead());
        Player3.setVisible(!BANG.players.get(3).isDead());
        Player4.setVisible(!BANG.players.get(4).isDead());
        Player5.setVisible(!BANG.players.get(5).isDead());
        Player6.setVisible(!BANG.players.get(6).isDead());
        
        if(PlayerSelect.getSelectedItem().equals("4"))
        {
        Player4.setVisible(false);
        Player5.setVisible(false);
        Player6.setVisible(false);
        }
        if(PlayerSelect.getSelectedItem().equals("5"))
        {
        //Player4.setVisible(!BANG.players.get(4).isDead());
        Player5.setVisible(false);
        Player6.setVisible(false);
        }
        if(PlayerSelect.getSelectedItem().equals("6"))
        {
        //Player4.setVisible(!BANG.players.get(4).isDead());
        //Player5.setVisible(!BANG.players.get(5).isDead());
        Player6.setVisible(false);
        }
        if(PlayerSelect.getSelectedItem().equals("7"))
        {
        //Player4.setVisible(!BANG.players.get(4).isDead());
        //Player5.setVisible(!BANG.players.get(5).isDead());
        //Player6.setVisible(!BANG.players.get(6).isDead());
        }
        
        
    }
    
    public static void drinkMenu(){
       healCount++; 
       Player1Heal.setVisible(true);
       Player2Heal.setVisible(true);
       Player3Heal.setVisible(true);
       Player4Heal.setVisible(true);
       Player5Heal.setVisible(true);
       Player6Heal.setVisible(true);
    }
    
    public static void shootMenu1(){
        ShootCount1++;
        if(((availableTargetRight(BANG.pc, 1).character().name()).equals(BANG.players.get(1).character().name()))||((availableTargetLeft(BANG.pc, 1).character().name()).equals(BANG.players.get(1).character().name())))
        {
            Player1Hit.setVisible(true);
            PlayerDist[0] = 1;
        }
        if(((availableTargetRight(BANG.pc, 1).character().name()).equals(BANG.players.get(2).character().name()))||((availableTargetLeft(BANG.pc, 1).character().name()).equals(BANG.players.get(2).character().name())))
        {
            Player2Hit.setVisible(true);
            PlayerDist[1] = 1;
        }
        if(((availableTargetRight(BANG.pc, 1).character().name()).equals(BANG.players.get(3).character().name()))||((availableTargetLeft(BANG.pc, 1).character().name()).equals(BANG.players.get(3).character().name())))
        {
            Player3Hit.setVisible(true);
            PlayerDist[2] = 1;
        }
        if(((availableTargetRight(BANG.pc, 1).character().name()).equals(BANG.players.get(4).character().name()))||((availableTargetLeft(BANG.pc, 1).character().name()).equals(BANG.players.get(4).character().name())))
        {
            Player4Hit.setVisible(true);
            PlayerDist[3] = 1;
        }
        if(((availableTargetRight(BANG.pc, 1).character().name()).equals(BANG.players.get(5).character().name()))||((availableTargetLeft(BANG.pc, 1).character().name()).equals(BANG.players.get(5).character().name())))
        {
            Player5Hit.setVisible(true);
            PlayerDist[4] = 1;
        }
        if(((availableTargetRight(BANG.pc, 1).character().name()).equals(BANG.players.get(6).character().name()))||((availableTargetLeft(BANG.pc, 1).character().name()).equals(BANG.players.get(6).character().name())))
        {
            Player6Hit.setVisible(true);
            PlayerDist[5] = 1;
        }
        
    }
    public static void shootMenu2(){
        ShootCount2++;
        if(((availableTargetRight(BANG.pc, 2).character().name()).equals(BANG.players.get(1).character().name()))||((availableTargetLeft(BANG.pc, 2).character().name()).equals(BANG.players.get(1).character().name())))
        {
            Player1Hit.setVisible(true);
            PlayerDist[0] = 2;
        }
        if(((availableTargetRight(BANG.pc, 2).character().name()).equals(BANG.players.get(2).character().name()))||((availableTargetLeft(BANG.pc, 2).character().name()).equals(BANG.players.get(2).character().name())))
        {
            Player2Hit.setVisible(true);
            PlayerDist[1] = 2;
        }
        if(((availableTargetRight(BANG.pc, 2).character().name()).equals(BANG.players.get(3).character().name()))||((availableTargetLeft(BANG.pc, 2).character().name()).equals(BANG.players.get(3).character().name())))
        {
            Player3Hit.setVisible(true);
            PlayerDist[2] = 2;
        }
        if(((availableTargetRight(BANG.pc, 2).character().name()).equals(BANG.players.get(4).character().name()))||((availableTargetLeft(BANG.pc, 2).character().name()).equals(BANG.players.get(4).character().name())))
        {
            Player4Hit.setVisible(true);
            PlayerDist[3] = 2;
        }
        if(((availableTargetRight(BANG.pc, 2).character().name()).equals(BANG.players.get(5).character().name()))||((availableTargetLeft(BANG.pc, 2).character().name()).equals(BANG.players.get(5).character().name())))
        {
            Player5Hit.setVisible(true);
            //Player5Dist.setText("2");
            PlayerDist[4] = 2;
            if(((availableTargetRight(BANG.pc, 2).character().name()).equals(BANG.players.get(6).character().name()))||((availableTargetLeft(BANG.pc, 2).character().name()).equals(BANG.players.get(6).character().name())))
        {
            Player6Hit.setVisible(true);
            PlayerDist[5] = 2;
        }
        }
    }
    private static void PlayerHitVis()
    {
        if(ShootCount1 == 0)
        {
            if(PlayerDist[0]== 1)
                Player1Hit.setVisible(false);
            if(PlayerDist[1]== 1)
                Player2Hit.setVisible(false);
            if(PlayerDist[2]== 1)
                Player3Hit.setVisible(false);
            if(PlayerDist[3]== 1)
                Player4Hit.setVisible(false);
            if(PlayerDist[4]== 1)
                Player5Hit.setVisible(false);
            if(PlayerDist[5]== 1)
                Player6Hit.setVisible(false);     
            
        }
        if(ShootCount2 == 0)
        {
            if(PlayerDist[0]== 2)
                Player1Hit.setVisible(false);
            if(PlayerDist[1]== 2)
                Player2Hit.setVisible(false);
            if(PlayerDist[2]== 2)
                Player3Hit.setVisible(false);
            if(PlayerDist[3]== 2)
                Player4Hit.setVisible(false);
            if(PlayerDist[4]== 2)
                Player5Hit.setVisible(false);
            if(PlayerDist[5]== 2)
                Player6Hit.setVisible(false);     
            
        }
    }
}

